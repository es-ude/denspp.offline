[project]
name = "denspp.offline"
version = "0.1.0"
description = "Python API for analysing extracellular recordings"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "fxpmath>=0.4.9",
    "impedancefitter>=2.0.11",
    "mat73>=0.65",
    "matplotlib>=3.9.2",
    "numpy>=1.26.4",
    "py-cpuinfo>=9.0.0",
    "pyocclient>=0.6",
    "pyspice>=1.5",
    "pyyaml>=6.0.2",
    "scikit-learn>=1.5.2",
    "scipy>=1.14.1",
    "torch>=2.5.1",
    "torchinfo>=1.8.0",
    "torchvision>=0.20.1",
    "tqdm>=4.67.1",
    "logging>=0.4.9.6",
    "logdecorator==2.*",
    "pyxdf>=1.16.8",
    "elasticai-creator",
    "notebook>=7.3.2",
]

[dependency-groups]
dev = [
    "pytest>=8.3.3",
]
lint = [
    "rope>=1.13.0",
    "mypy>=1.13.0",
    "ruff>=0.8.2",
    "python-lsp-server>=1.12.0",
    "pylsp-mypy>=0.6.9",
    "python-lsp-ruff>=2.2.2",
]

[tool.ruff]
exclude = [
    ".ipynp",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
line-length = 88
indent-width = 4
target-version = "py311"

[tool.ruff.lint]
select = [
    "F",   # pyflakes
    "B",   # flake8-bugbear
    "E",   # pycodestyle
    "D",   # pydocstyle
    "I",   # isort
    "ANN", # flake8 type annotations
    "RUF", # ruff-specific rules
]
unfixable = ["B"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
docstring-code-format = false

[tool.uv.sources]
elasticai-creator = { git = "https://github.com/es-ude/elastic-ai.creator.git"}

[tool.ruff.lint.pydocstyle]
convention = "google"
